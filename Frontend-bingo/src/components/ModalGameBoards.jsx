import React, { useState, useRef } from "react";
import generalStyles from "../assets/styles/generalStyles.module.css";
import TextField from "@mui/material/TextField";
import { ModalVerify } from "./ModalVerify";

export const ModalGameBoards = ({
    modal,
    setModal,
    setOpacityLayer,
    markedNumbers,
    captureClick,
    setCaptureClick,
    tablaGanadora,
    setTablaGanadora,
}) => {
    const [numTables, setNumTables] = useState(0);
    const [isNumber, setIsNumber] = useState(true);
    const inputTablas = useRef(0);

    const handleNumTables = () => {
        const { value } = inputTablas.current;
        console.log(value);
        const parseValue = parseInt(value);

        //* cuando ingresamos numeros con letras
        // La funci√≥n parseInt intenta convertir el valor a un n√∫mero hasta que encuentra un car√°cter no num√©rico. Por ejemplo, parseInt("123abc") devolver√° 123, lo cual es un valor num√©rico y, por lo tanto, tu condici√≥n if (parseValue) se eval√∫a como verdadera.

        if (parseValue) {
            setIsNumber(true);
            setNumTables(parseValue);
        } else {
            setIsNumber(false);
        }
    };

    return (
        <section
            className={
                modal !== "gameBoards"
                    ? generalStyles.modalGameBoards
                    : generalStyles.modalGameBoards + " " + generalStyles.modalGameActive
            }
        >
            <section className={generalStyles.gameBoards_header}>
                <div className={generalStyles.modal_top}>
                    <span>Tablas de Juego</span>
                    <button
                        className={generalStyles.modalClose}
                        onClick={() => {
                            setOpacityLayer(false);
                            setModal("");
                        }}
                        style={{ color: "black" }}
                    >
                        X
                    </button>
                </div>
                {!isNumber && (
                    <h6 className={generalStyles.modal_verificarValidation}>
                        ‚ö†Ô∏è Solo se permiten n√∫meros
                    </h6>
                )}
                {tablaGanadora && (
                    <h3 style={{ color: "#58f47d" }}>
                        {tablaGanadora && `üéâ Tabla ganadora: N# ${tablaGanadora} üéâ`}
                    </h3>
                )}

                <div className={generalStyles.gameAction}>
                    <div className={generalStyles.gameAction_agregar}>
                        <TextField
                            id="nTablas"
                            label="Cantidad de tablas"
                            variant="outlined"
                            fullWidth
                            margin="normal"
                            className={
                                generalStyles.bannerInput + " " + generalStyles.GameAction_input
                            }
                            defaultValue={numTables}
                            inputRef={inputTablas} // para este tipo de componente Cambia ref por inputRef
                        />
                        <button
                            className={
                                generalStyles.gameAction_clear +
                                " " +
                                generalStyles.modalBtnsActions
                            }
                            onClick={handleNumTables}
                            style={{ width: "8.5rem" }}
                        >
                            Agregar
                        </button>
                    </div>

                    <button
                        className={
                            generalStyles.gameAction_clear + " " + generalStyles.modalBtnsActions
                        }
                        onClick={() => setNumTables(0)}
                    >
                        Borrar tablas
                    </button>
                </div>
            </section>
            <section className={generalStyles.gameBoards_body}>
                {[...Array(numTables)].map((_, i) => (
                    <div className={generalStyles.game_verifyBoard} key={i}>
                        <h2>Tabla N# {i + 1}</h2>
                        <ModalVerify
                            markedNumbers={markedNumbers}
                            captureClick={captureClick}
                            setCaptureClick={setCaptureClick}
                            tableNumber={i + 1}
                            setTablaGanadora={setTablaGanadora}
                        />
                    </div>
                ))}
            </section>
        </section>
    );
};
